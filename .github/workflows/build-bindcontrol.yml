# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Build & Test Application

on:
  push:
    branches: [ "main", "feature/*" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    name: Build, Test & Package
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Cache pip dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install Tools & Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -U -f https://extras.wxpython.org/wxPython4/extras/linux/gtk3/ubuntu-20.04 wxPython --user
          pip install pyinstaller flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      # disable for now
      #    - name: Lint with flake8
      #      run: |
      #        # stop the build if there are Python syntax errors or undefined names
      #        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
      #        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
      #        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      # Can be enabled later and used to run tests
      #    - name: Test with pytest
      #      run: |
      #        pytest
      #    - name: Package Application
      #      uses: JackMcKew/pyinstaller-action-windows@main
      #      with:
      #        path: .
      - name: Create Installers
        run: |
          echo "1.0.0-beta" > version.txt
          
          pyinstaller \
            -i icons/BindControl.ico \
            --noconsole \
            --noconfirm \
            --clean \
            --add-data icons:icons \
            --add-data Help:Help \
            --add-data version.txt:. \
            --exclude-module _bz2 \
            --exclude-module _ctypes \
            --exclude-module _decimal \
            --exclude-module _hashlib \
            --exclude-module _lzma \
            --exclude-module _socket \
            --exclude-module _ssl \
            BindControl.py

      - name: Verify Build
        run: |
          ls -la dist
          cd dist
          ls -la BindControl

#    - name: Upload Artifact
#      uses: actions/upload-artifact@v2
#      with:
#        name: bindcontrol_windows
#        path: dist/bindcontrol-1.0.0-beta.zip